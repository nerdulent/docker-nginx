2021-03-10 22:58:01,973:DEBUG:certbot._internal.main:certbot version: 1.13.0
2021-03-10 22:58:01,973:DEBUG:certbot._internal.main:Location of certbot entry point: /usr/local/bin/certbot
2021-03-10 22:58:01,973:DEBUG:certbot._internal.main:Arguments: ['--agree-tos', '--no-eff-email', '--hsts', '--webroot', '-w', '/var/www', '--rsa-key-size', '4096', '--cert-name=example.com', '-m', 'mail@example.com', '-d', 'example.com']
2021-03-10 22:58:01,973:DEBUG:certbot._internal.main:Discovered plugins: PluginsRegistry(PluginEntryPoint#manual,PluginEntryPoint#null,PluginEntryPoint#standalone,PluginEntryPoint#webroot)
2021-03-10 22:58:01,985:DEBUG:certbot._internal.log:Root logging level set at 20
2021-03-10 22:58:01,985:INFO:certbot._internal.log:Saving debug log to /var/log/letsencrypt/letsencrypt.log
2021-03-10 22:58:01,985:DEBUG:certbot._internal.plugins.selection:Requested authenticator webroot and installer None
2021-03-10 22:58:01,988:DEBUG:certbot._internal.plugins.selection:Single candidate plugin: * webroot
Description: Place files in webroot directory
Interfaces: IAuthenticator, IPlugin
Entry point: webroot = certbot._internal.plugins.webroot:Authenticator
Initialized: <certbot._internal.plugins.webroot.Authenticator object at 0x7efe37f8a9a0>
Prep: True
2021-03-10 22:58:01,989:DEBUG:certbot._internal.plugins.selection:Selected authenticator <certbot._internal.plugins.webroot.Authenticator object at 0x7efe37f8a9a0> and installer None
2021-03-10 22:58:01,989:INFO:certbot._internal.plugins.selection:Plugins selected: Authenticator webroot, Installer None
2021-03-10 22:58:02,870:DEBUG:acme.client:Sending GET request to https://acme-v02.api.letsencrypt.org/directory.
2021-03-10 22:58:02,871:DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): acme-v02.api.letsencrypt.org:443
2021-03-10 22:58:05,094:DEBUG:urllib3.connectionpool:https://acme-v02.api.letsencrypt.org:443 "GET /directory HTTP/1.1" 200 658
2021-03-10 22:58:05,096:DEBUG:acme.client:Received response:
HTTP 200
Server: nginx
Date: Wed, 10 Mar 2021 22:58:05 GMT
Content-Type: application/json
Content-Length: 658
Connection: keep-alive
Cache-Control: public, max-age=0, no-cache
X-Frame-Options: DENY
Strict-Transport-Security: max-age=604800

{
  "BYVtuMGChYQ": "https://community.letsencrypt.org/t/adding-random-entries-to-the-directory/33417",
  "keyChange": "https://acme-v02.api.letsencrypt.org/acme/key-change",
  "meta": {
    "caaIdentities": [
      "letsencrypt.org"
    ],
    "termsOfService": "https://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf",
    "website": "https://letsencrypt.org"
  },
  "newAccount": "https://acme-v02.api.letsencrypt.org/acme/new-acct",
  "newNonce": "https://acme-v02.api.letsencrypt.org/acme/new-nonce",
  "newOrder": "https://acme-v02.api.letsencrypt.org/acme/new-order",
  "revokeCert": "https://acme-v02.api.letsencrypt.org/acme/revoke-cert"
}
2021-03-10 22:58:05,097:DEBUG:acme.client:Requesting fresh nonce
2021-03-10 22:58:05,098:DEBUG:acme.client:Sending HEAD request to https://acme-v02.api.letsencrypt.org/acme/new-nonce.
2021-03-10 22:58:05,559:DEBUG:urllib3.connectionpool:https://acme-v02.api.letsencrypt.org:443 "HEAD /acme/new-nonce HTTP/1.1" 200 0
2021-03-10 22:58:05,561:DEBUG:acme.client:Received response:
HTTP 200
Server: nginx
Date: Wed, 10 Mar 2021 22:58:06 GMT
Connection: keep-alive
Cache-Control: public, max-age=0, no-cache
Link: <https://acme-v02.api.letsencrypt.org/directory>;rel="index"
Replay-Nonce: 0003l19oXkDm2M4rSig25s4ASq5czyF20maykQCZ_6qScCY
X-Frame-Options: DENY
Strict-Transport-Security: max-age=604800


2021-03-10 22:58:05,561:DEBUG:acme.client:Storing nonce: 0003l19oXkDm2M4rSig25s4ASq5czyF20maykQCZ_6qScCY
2021-03-10 22:58:05,562:DEBUG:acme.client:JWS payload:
b'{\n  "contact": [\n    "mailto:mail@example.com"\n  ],\n  "termsOfServiceAgreed": true\n}'
2021-03-10 22:58:05,570:DEBUG:acme.client:Sending POST request to https://acme-v02.api.letsencrypt.org/acme/new-acct:
{
  "protected": "eyJhbGciOiAiUlMyNTYiLCAiandrIjogeyJuIjogInlSNWswcnJlQ3dHSmNQOFFPeDJxS0YxZ1N5aU9OMFlTM2owdjB1WVNOREhFcVU2UXd0RXBiczV5NUxYeU02Nnl5N3Q1TUdsTUdHb0N6M3EyNEJJSDcwQjh2a2hDSXBDTU9LTXY1R1pWc0pSbWZpemZxd1QtY2YzSnlGNjNjUlJVNVhGQ2tiM0QyVkVmUDVWUjJqTVRIaVpySU1jYnBaZ3dZQkt0R0JodmYzTUpULURkbm5laGp6di1USEZQdzI2VU1MengxQU5SVU84akNmSkkybGYtWlFOSjRCRGVFbUUtRjlUWXFoVGt4QkZiWURZUUliOFVnRHVBWWQ1NGF1YjlISFpEb1N5cnhTamVHN0lhTnFaLVdubU1rLUJhNkNOTDQ4amtHS0VjTWNUUjZBRkFuN2FEcURUel90aXhsUWducE9JcGF4c3lQQjJWZFR5SExtQXJoSmhkUGg5Zmh3RGVfdXdoUnptaGl2UlF6SGI5cV9UR3lkVTE5YnRHRGhlM2o0a09CQjMyVG11ZGlJNVlJZVg0X0RweW1rTDU0SVFMaWk3WExHX2x4R1loNEJXaXNfU1h5RDc3WUI2RlBpdS1feF9ab2RkejhXOHJRekFmZE5Jbm5DSTU1X2wtRlpQSnpnMEJWVEdRXzVGWTlqZFhXTTZXeV9ldGU3OVNVSjdLalpRRmttSS1kdmp5Z2w5R0RNUFFxel9HUVBGZWZBTWRGdjdrbEF2cENOX3dJVjh6cnUwYkN4anNUMndWODNMN3NHVDhSSmhpT203SVRrRTJWdHpqQmIzbHFWVlE0NmtuU29pNUZOV2FPZ0hiTFppY2NiMzVFQjlNQWtsUFphZjJ6LTNTUUlyQ0VWMWhOREpCSGRKUFVFVWtzSUJLTGFwT2M4RHBob2FIQk9jIiwgImUiOiAiQVFBQiIsICJrdHkiOiAiUlNBIn0sICJub25jZSI6ICIwMDAzbDE5b1hrRG0yTTRyU2lnMjVzNEFTcTVjenlGMjBtYXlrUUNaXzZxU2NDWSIsICJ1cmwiOiAiaHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2FjbWUvbmV3LWFjY3QifQ",
  "signature": "K7-fsoIH7LcB4klfG_vTz-Y9KV3_JvQL9jK2yYfrKEQGDDqlKavJ_nTfxmLO4LoEO15QZiDxbmxkikpxR8xm9KA-R4ejfRftdh6X6ob-0z1Z2Uz2y3wqjMKThKZGv0Br_yGQhpUUnDqHBvx2DOfzg3cGMD6GTBZPt1yj_zk5YyIdrDg26N-T_Pupadx2_UFGj1llz1kwReXYhVXqhDgvbgfLAHABcoVfsnGnZ_m-BtQ7pCDdqntNPxGwjo768wkKyhE2H4TsnwFpmbKT3ARQbm0Mdhxf-GNLydhTCyx7pJPondvFuvWVTOpDdpx_xO4PvKb48h0szxir3mOERO9kbtZxzC3OK4gMrWbWI6M7xcW2H-V3c12iDD62zfGA9tOaUMg10n1Z0xGDBgQ38DixovWY_4SIXoGorlk__Ub45gbdzsa-2XUQm_aa298hrm3fUA5432FgBJxL2md9XBQVaEvCSEqeImYqTtGSAqSuhRNwTf5XKn_flWYUJxm9NqCfjFEsSyJuLy8-31vIWQ5KLfq_ZPqp0kvA14CyY9RvPyZkDcuHljB_QvfBHl7LCNPtmyAF87NfoOPhtBDkoUQVzVE2J6k2anp_eSomVqfZP29Jsw8_skLLW562c-2BCiuGTQYKCKF6lxMD3Ch9JA5ibm_dcCazcOaCFe6K9ZqYQrs",
  "payload": "ewogICJjb250YWN0IjogWwogICAgIm1haWx0bzptYWlsQGV4YW1wbGUuY29tIgogIF0sCiAgInRlcm1zT2ZTZXJ2aWNlQWdyZWVkIjogdHJ1ZQp9"
}
2021-03-10 22:58:06,323:DEBUG:urllib3.connectionpool:https://acme-v02.api.letsencrypt.org:443 "POST /acme/new-acct HTTP/1.1" 400 183
2021-03-10 22:58:06,324:DEBUG:acme.client:Received response:
HTTP 400
Server: nginx
Date: Wed, 10 Mar 2021 22:58:06 GMT
Content-Type: application/problem+json
Content-Length: 183
Connection: keep-alive
Cache-Control: public, max-age=0, no-cache
Link: <https://acme-v02.api.letsencrypt.org/directory>;rel="index"
Replay-Nonce: 00032zlKNETLibz2z4Om-TL0zgzkItobZ0QEt_Q7KLdxWH8

{
  "type": "urn:ietf:params:acme:error:invalidEmail",
  "detail": "Error creating new account :: invalid contact domain. Contact emails @example.com are forbidden",
  "status": 400
}
2021-03-10 22:58:26,805:WARNING:certbot.util:Invalid email address: .
2021-03-10 22:58:30,641:DEBUG:certbot._internal.main:
Traceback (most recent call last):
  File "/opt/certbot/src/certbot/certbot/_internal/client.py", line 217, in perform_registration
    return acme.new_account_and_tos(newreg, tos_cb)
  File "/opt/certbot/src/acme/acme/client.py", line 848, in new_account_and_tos
    return self.client.new_account(regr)
  File "/opt/certbot/src/acme/acme/client.py", line 590, in new_account
    response = self._post(self.directory['newAccount'], new_account)
  File "/opt/certbot/src/acme/acme/client.py", line 84, in _post
    return self.net.post(*args, **kwargs)
  File "/opt/certbot/src/acme/acme/client.py", line 1188, in post
    return self._post_once(*args, **kwargs)
  File "/opt/certbot/src/acme/acme/client.py", line 1201, in _post_once
    response = self._check_response(response, content_type=content_type)
  File "/opt/certbot/src/acme/acme/client.py", line 1059, in _check_response
    raise messages.Error.from_json(jobj)
acme.messages.Error: urn:ietf:params:acme:error:invalidEmail :: The provided email for a registration was invalid :: Error creating new account :: invalid contact domain. Contact emails @example.com are forbidden

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/opt/certbot/src/certbot/certbot/_internal/main.py", line 568, in _determine_account
    acc, acme = client.register(
  File "/opt/certbot/src/certbot/certbot/_internal/client.py", line 175, in register
    regr = perform_registration(acme, config, tos_cb)
  File "/opt/certbot/src/certbot/certbot/_internal/client.py", line 225, in perform_registration
    config.email = display_ops.get_email(invalid=True)
  File "/opt/certbot/src/certbot/certbot/display/ops.py", line 60, in get_email
    raise errors.Error(
certbot.errors.Error: An e-mail address or --register-unsafely-without-email must be provided.
2021-03-10 22:58:30,645:DEBUG:certbot._internal.log:Exiting abnormally:
Traceback (most recent call last):
  File "/opt/certbot/src/certbot/certbot/_internal/client.py", line 217, in perform_registration
    return acme.new_account_and_tos(newreg, tos_cb)
  File "/opt/certbot/src/acme/acme/client.py", line 848, in new_account_and_tos
    return self.client.new_account(regr)
  File "/opt/certbot/src/acme/acme/client.py", line 590, in new_account
    response = self._post(self.directory['newAccount'], new_account)
  File "/opt/certbot/src/acme/acme/client.py", line 84, in _post
    return self.net.post(*args, **kwargs)
  File "/opt/certbot/src/acme/acme/client.py", line 1188, in post
    return self._post_once(*args, **kwargs)
  File "/opt/certbot/src/acme/acme/client.py", line 1201, in _post_once
    response = self._check_response(response, content_type=content_type)
  File "/opt/certbot/src/acme/acme/client.py", line 1059, in _check_response
    raise messages.Error.from_json(jobj)
acme.messages.Error: urn:ietf:params:acme:error:invalidEmail :: The provided email for a registration was invalid :: Error creating new account :: invalid contact domain. Contact emails @example.com are forbidden

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/opt/certbot/src/certbot/certbot/_internal/main.py", line 568, in _determine_account
    acc, acme = client.register(
  File "/opt/certbot/src/certbot/certbot/_internal/client.py", line 175, in register
    regr = perform_registration(acme, config, tos_cb)
  File "/opt/certbot/src/certbot/certbot/_internal/client.py", line 225, in perform_registration
    config.email = display_ops.get_email(invalid=True)
  File "/opt/certbot/src/certbot/certbot/display/ops.py", line 60, in get_email
    raise errors.Error(
certbot.errors.Error: An e-mail address or --register-unsafely-without-email must be provided.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/bin/certbot", line 11, in <module>
    load_entry_point('certbot', 'console_scripts', 'certbot')()
  File "/opt/certbot/src/certbot/certbot/main.py", line 15, in main
    return internal_main.main(cli_args)
  File "/opt/certbot/src/certbot/certbot/_internal/main.py", line 1421, in main
    return config.func(config, plugins)
  File "/opt/certbot/src/certbot/certbot/_internal/main.py", line 1284, in certonly
    le_client = _init_le_client(config, auth, installer)
  File "/opt/certbot/src/certbot/certbot/_internal/main.py", line 651, in _init_le_client
    acc, acme = _determine_account(config)
  File "/opt/certbot/src/certbot/certbot/_internal/main.py", line 575, in _determine_account
    raise errors.Error(
certbot.errors.Error: Unable to register an account with ACME server
2021-03-10 22:58:30,647:ERROR:certbot._internal.log:Unable to register an account with ACME server
